#!/bin/busybox sh
#
# system init script
#
# Config from master.cfg
# Default PKGMODE=NO
# Default HOSTNAME=simpler

# TODO: list the availabe options

export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

# mount virtual filesystems
busybox mount -t proc   proc   /proc
busybox mount -t sysfs  sysfs  /sys
busybox mount -t devpts devpts /dev/pts

busybox --install -s

mdev -s

touch /var/log/messages /var/log/lastlog # btmp utmp wtmp

# if it's a Raspberry Pi set options and mount /boot
if [ -b /dev/mmcblk0p1 ]; then
	echo 0 > /proc/sys/kernel/printk
	echo 1 > /proc/sys/net/ipv4/ip_forward
	echo /sbin/mdev > /proc/sys/kernel/hotplug
	mount -o noatime /dev/mmcblk0p1 /boot
fi

cfg-init
cfg-load

. /lib/libscript

# create mount points
while read DEV MP TYPE || [ -n "$MP" ]; do
	if ! echo "$DEV" | grep -q '^#'; then
		if [ -n "$MP" -a "$MP" != "none" ]; then
			mkdir -p "$MP"
		fi
	fi
done < /etc/fstab

# /home may be a mount point, a symbolic link or create an empty directory
[ ! -d /home -a -n "$HOME_SYMLINK" ]  && ln -s "$HOME_SYMLINK" /home
mkdir -p /home

logstart "Mounting filesystems"
mount -a 2>> "$LOGSTDERR"
logstatus

# check for user home directories and create if needed
while read LINE || [ -n "$LINE" ]; do
	USER_ID=$(echo "$LINE" | cut -d : -f 3)
	USER_HOME=$(echo "$LINE" | cut -d : -f 6)
	if [ "$USER_ID" -eq 0 -o "$USER_ID" -gt 999 ]; then
		if [ ! -d "$USER_HOME" -o "$USER_HOME" = "/root" ]; then
			mkdir -p "$USER_HOME"
			[ -d /etc/skel ] && cp -a /etc/skel/. "$USER_HOME"
		fi
	fi
done < /etc/passwd

# extract the packages
if [ "$(echo /boot/packages/*.tgz)" != "/boot/packages/*.tgz" ]; then
	for i in /boot/packages/*.tgz; do
		logstart "Extracting '$(basename "$i" .tgz)' package"
		pkg-extract "$i" 2>> "$LOGSTDERR"
		logstatus
	done
fi

# if isn't a Raspberry Pi (chroot)
# enter into login shell, umount and exit
if [ ! -b /dev/mmcblk0p1 ]; then
	ash -l
	if [ "/media/*" != "/media/*" ]; then
		for i in /media/*; do
			[ -d "$i" ] && umount "$i"
		done
	fi
	umount /dev/pts
	umount /sys
	umount /proc
	echo
	exit 0
fi

[ -n "$LOGGIN_HOST" ] && SYSLOG_OPTS="$SYSLOG_OPTS -L -R $LOGGIN_HOST"
hostname "${HOSTNAME:-simpler}"
syslogd $SYSLOG_OPTS
klogd

for i in $MODULES; do
	modprobe "$i" 2>> "$LOGSTDERR"
done

service network start 2>> "$LOGSTDERR" & # network must wait for eth0
service udhcpd start 2>> "$LOGSTDERR"
service ntpd start 2>> "$LOGSTDERR"

touch /var/lib/lrpkg/packages
while read i || [ -n "$i" ]; do
	[ -x "/etc/rc.d/pkgs/rc.$i" ] && "/etc/rc.d/pkgs/rc.$i" start 2>> "$LOGSTDERR"
done < /var/lib/lrpkg/packages
. /etc/rc.local

umount /boot
