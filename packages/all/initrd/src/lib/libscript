#!/bin/sh
#
# system library script
#
# Useful functions to use in your init scripts

case "$0" in
	/sbin/*|/usr/sbin/*|/usr/local/sbin/*|/etc/init.d/*|/etc/rc.d/*)
		if [ "$(id -u)" != "0" ]; then
			echo "You must be root to perform this command." >&2
			exit 1
		fi
		;;
esac

PKGMAXSIZE=2097152 # 2MiB
LOGSTDERR=/var/log/stderr

[ -f /etc/config/master.cfg ] && . /etc/config/master.cfg

PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
LRPKG=/var/lib/lrpkg
LRPKG_CACHE=/var/cache/lrpkg
DESCRIPTION="$(head -3 "$0" | tail -1 | sed -e 's/^# //')"

case "$PKGMODE" in
	[Ww]|[Ww][Hh][Ii][Tt][Ee]) PKGMODE=WHITE;;
	[Bb]|[Bb][Ll][Aa][Cc][Kk]) PKGMODE=BLACK;;
	*) PKGMODE=NO
esac

grep -q /boot /proc/mounts
BOOT="$?"

mt_boot() {
	if [ "$BOOT" != "0" ]; then
		mount /boot
		return "$?"
	fi
}

umt_boot() {
	if [ "$BOOT" != "0" ]; then
		umount /boot
		return "$?"
	fi
}

pkghelp() {
	echo "Usage: $0 {start|stop|poweroff|lineup}" >&2
	exit 1
}

srvhelp() {
	echo "Usage: $0 {start|stop|reload|restart|status}" >&2
	exit 1
}

callfunc() {
	if type "$1" | grep -q function; then
		"$1"
	else
		echo "No $1 function defined." >&2
		exit 1
	fi
}

pkgargs() {
	if [ "$#" != 1 ]; then
		type help | grep -q function && help || pkghelp
	fi
	case "$1" in
		start|stop|poweroff|lineup)
			callfunc "$1"
		;;
		*)
			if type "$1" | grep -q function; then
				"$1"
			else
				type help | grep -q function && help || pkghelp
			fi
		;;
	esac
}

srvargs() {
	if [ "$#" != "1" ]; then
		type help | grep -q function && help || srvhelp
	fi
	case "$1" in
		start|stop|reload|status)
			callfunc "$1"
		;;
		restart)
			if type "$1" | grep -q function; then
				"$1"
			else
				callfunc stop
				callfunc start
			fi
		;;
		*)
			if type "$1" | grep -q function; then
				"$1"
			else
				type help | grep -q function && help || srvhelp
			fi
		;;
	esac
}

checkcfgdir() { # make sure $1 exists and is a directory
	if [ ! -d "/etc/config/$1" ]; then
		rm -rf "/etc/config/$1"
		mkdir -p "/etc/config/$1"
		if grep -q /boot /proc/mounts; then
			rm -rf "/boot/config/$1"
			mkdir -p "/boot/config/$1"
		fi
	fi
}

checkcfgfile() { # make sure $1 exists and is a file
	if [ ! -f "/etc/config/$1" ]; then
		rm -rf "/etc/config/$1"
		touch "/etc/config/$1"
		if grep -q /boot /proc/mounts; then
			rm -rf "/boot/config/$1"
			touch "/boot/config/$1"
		fi
	fi
}

logmsg=

logstart() {
	[ -z "$1" ] && return
	logmsg="$1"
	[ -t 1 ] && printf "\033[1G[....] $1"
	printf "$(date '+%F %T')\n$1\n" >> "$LOGSTDERR"
}

logstatus() {
	if [ "$?" = "0" ]; then
		logdone "$1"
	else
		logfail "$1"
	fi
}

logfail() {
	logprint 31 FAIL "$1"
}

logdone() {
	logprint 32 DONE "$1"
}

logpass() {
	logprint 33 PASS "$1"
}

logprint() {
	[ -z "$logmsg" ] && return
	if [ -t 1 ]; then
		printf "\033[2G\033[1;$1m$2\033[0m\n"
	else
		printf "[$2] $logmsg\n"
	fi
	logger "[$2] $logmsg"
	if [ -n "$3" ]; then
		printf "$3\n" >> "$LOGSTDERR"
		logger "$3"
	fi
}
